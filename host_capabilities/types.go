package host_capabilities

// Note: all the types defined inside of this file will get the easyjson
// interface contract be generated by `make generate-easyjson`

type KeylessInfo struct {
	// Issuer is identifier of the OIDC provider. E.g: https://github.com/login/oauth
	Issuer string `json:"issuer"`
	// Subject contains the information of the user used to authenticate against
	// the OIDC provider. E.g: mail@example.com
	Subject string `json:"subject"`
}

type VerificationResponse struct {
	// informs if the image was verified or not
	IsTrusted bool `json:"is_trusted"`
	// digest of the verified image
	Digest string `json:"digest"`
}

// sigstorePubKeysVerify represents the WaPC JSON contract, used for marshalling
// and unmarshalling payloads to wapc host calls
type sigstorePubKeysVerify struct {
	// String pointing to the object (e.g.: `registry.testing.lan/busybox:1.0.0`)
	Image string `json:"image"`
	// List of PEM encoded keys that must have been used to sign the OCI object
	PubKeys []string `json:"pub_keys"`
	// Annotations that must have been provided by all signers when they signed
	// the OCI artifact. Optional
	Annotations map[string]string `json:"annotations,omitempty"`
}

// sigstoreKeylessVerify represents the WaPC JSON contract, used for marshalling
// and unmarshalling payloads to wapc host calls
type sigstoreKeylessVerify struct {
	// String pointing to the object (e.g.: `registry.testing.lan/busybox:1.0.0`)
	Image string `json:"image"`
	// List of PEM encoded keys that must have been used to sign the OCI object
	Keyless []KeylessInfo `json:"keyless"`
	// Annotations that must have been provided by all signers when they signed
	// the OCI artifact. Optional
	Annotations map[string]string `json:"annotations,omitempty"`
}

// We don't need to expose that to consumers of the library
// This is a glorified wrapper needed to unmarshal a string
// inside of TinyGo. As of release 0.29.0, unmarshal a simple
// string causes a runtime panic
type OciManifestResponse struct {
	// digest of the image
	Digest string `json:"digest"`
}

// We don't need to expose that to consumers of the library
// This is a glorified wrapper needed to unmarshal a list
// of string inside of TinyGo. As of release 0.29.0, unmarshal a simple
// list of string causes a runtime panic
type LookupHostResponse struct {
	// List of IP addresses associated with the host
	Ips []string `json:"ips"`
}
